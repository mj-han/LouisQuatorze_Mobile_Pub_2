.page-main{padding-top:6.25rem}.page-main .header:before{top:-2.8125rem}.page-main .section-body{padding-bottom:3.125rem}.main-gift__header{margin-bottom:1.25rem;text-align:center}.main-gift__title{font-size:1.0625rem;line-height:1.411765;letter-spacing:.06em;font-weight:500;text-transform:uppercase;margin:0 0 .9375rem}.main-gift__tab--inner{text-align:center;font-size:0;line-height:0;margin:0 -.9375rem}.main-gift__tab--item{display:inline-block;vertical-align:middle;padding:0 .9375rem}.main-gift__tab--link{display:block;font-size:.75rem;line-height:1.666667;letter-spacing:.06em;font-weight:500;opacity:0.5;text-transform:uppercase}.is-current .main-gift__tab--link{opacity:1}.gift-thumb__inner{position:relative;width:100%}.gift-thumb__inner:after{content:"";display:block;padding-bottom:100%}.gift-thumb__img{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:100%}.gift-thumb--prev{width:.5rem;height:1rem;position:absolute;left:1.25rem;top:50%;transform:translateY(-50%);background:url("../../images/common/ico_slide_prev.svg?ver=211025") no-repeat center center / contain;background-size:.5rem 1rem;z-index:5}.gift-thumb--next{width:.5rem;height:1rem;position:absolute;right:1.25rem;top:50%;transform:translateY(-50%);background:url("../../images/common/ico_slide_next.svg?ver=211025") no-repeat center center / contain;background-size:.5rem 1rem;z-index:5}.gift-thumb__pagination{text-align:center;font-size:0;line-height:0}.gift-thumb__pagination .swiper-pagination-current{font-size:.75rem;line-height:1.583333;padding-right:.6875rem;position:relative}.gift-thumb__pagination .swiper-pagination-current:after{content:"";width:1px;height:.625rem;background-color:#B8B8B8;position:absolute;right:0;top:50%;transform:translateY(-50%)}.gift-thumb__pagination .swiper-pagination-total{font-size:.75rem;line-height:1.583333;padding-left:.625rem}

/*# sourceMappingURL=data:application/json;base64, */
