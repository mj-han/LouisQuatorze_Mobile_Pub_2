.center-notice .paging{margin-top:1.875rem}.notice-list{border-top:solid 1px #000}.notice-list__item{border-bottom:solid 1px #f5f5f5}.notice-list__item.notice-list__item--notice{border-bottom-color:#B8B8B8}.notice-item__link{display:block;position:relative;padding:1.25rem 3.125rem 1.25rem 1.25rem}.notice-list__item--notice .notice-item__link{background-color:#f5f5f5}.notice-item__link:after{content:"";width:.1875rem;height:.375rem;background:url("../../images/common/ico-notice-list-arrow.svg?ver=211025") no-repeat center center / contain;background-size:.1875rem .375rem;position:absolute;right:1.25rem;top:50%;transform:translateY(-50%)}.notice-item__title{font-size:.75rem;line-height:1.666667;letter-spacing:.06em;font-weight:500;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.notice-item__date{font-size:.6875rem;line-height:1.636364;letter-spacing:.06em;font-weight:400;color:#484848;margin-top:.3125rem}.center-notice__single{border-top:solid 1px #000}.center-single__header{padding:1.25rem 0;border-bottom:solid 1px #F5F5F2;margin-bottom:1.25rem}.center-single__title{font-size:.875rem;line-height:1.571429;letter-spacing:.06em;font-weight:500;margin:0}.center-single__date{font-size:.6875rem;line-height:1.636364;letter-spacing:.06em;font-weight:400;color:#484848;margin-top:.625rem}.center-single__cont{font-size:.75rem;line-height:1.5;letter-spacing:.06em;font-weight:300}.center-single__cont strong{font-weight:500}.center-single__cont p{margin:.9375rem 0 0}.center-single__cont p:first-child{margin:0}.center-single__btn{margin-top:2.5rem}

/*# sourceMappingURL=data:application/json;base64, */
